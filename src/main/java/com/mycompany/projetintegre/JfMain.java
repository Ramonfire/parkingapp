/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.projetintegre;

import javax.swing.JFrame;
import java.awt.*;
import java.awt.image.*;
import java.awt.geom.*;
import java.security.SecureRandom;
import javax.swing.*;
import javax.swing.border.*;

/**
 *
 * @author PC GAMER
 */
public class JfMain extends javax.swing.JFrame {
    
    public static JFrame jfMain = new JfMain();
    public static boolean darkTheme = true;
    public static String code;
    public static String email;
    /**
     * Creates new form JfMain
     */
    public JfMain() {
        initComponents();
        setExtendedState(JFrame.MAXIMIZED_BOTH);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 850, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 450, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //SendEmail.sendEmail("mohammed.gaga@uir.ac.ma", "projet.inte@gmail.com", "projetint2000", "Account created - NAMEHERE", "looogin", "pwwwd");
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JfMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JfMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JfMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JfMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    UIManager.setLookAndFeel("javax.swing.plaf.nimbus.NimbusLookAndFeel");
                } catch (Exception e) {
                    // No Nimbus
                }
                UIManager.getLookAndFeelDefaults().put(
                        "ScrollBar:ScrollBarThumb[Enabled].backgroundPainter",
                        new FillPainter(new Color(0,0,0, 100)));
                UIManager.getLookAndFeelDefaults().put(
                        "ScrollBar:ScrollBarThumb[MouseOver].backgroundPainter",
                        new FillPainter(new Color(0,0,0, 180)));
                UIManager.getLookAndFeelDefaults().put(
                        "ScrollBar:ScrollBarThumb[Pressed].backgroundPainter",
                        new FillPainter(new Color(0,0,0, 180)));
                UIManager.getLookAndFeelDefaults().put(
                        "ScrollBar:ScrollBarTrack[Enabled].backgroundPainter",
                        new FillPainter(new Color(250, 243, 243, 80)));

                UIManager.getLookAndFeelDefaults().put(
                        "ScrollBar:\"ScrollBar.button\".size", 0);
                UIManager.getLookAndFeelDefaults().put(
                        "ScrollBar.decrementButtonGap", 0);
                UIManager.getLookAndFeelDefaults().put(
                        "ScrollBar.incrementButtonGap", 0);
                UIManager.getLookAndFeelDefaults().put("ScrollBar.width", 40);
                
                jfMain.setVisible(true);
                /*JpDisplay.poste = "responsablesite";
                JpDisplay.idConnected = 4;*/
                jfMain.setContentPane(new loginTestPanel());
                jfMain.pack();
            }
        });
    }
    
    public static void createDisplay(){
        jfMain.setContentPane(new JpDisplay());
        jfMain.revalidate();
    }
    
    public static void setTheme(){
        darkTheme = !darkTheme;
        createDisplay();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
